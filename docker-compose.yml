version: '3.8'

services:
  db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: ReConnect
      POSTGRES_USER: reconnect
      POSTGRES_PASSWORD: 1234
    ports:
      - "15432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  app:
    env_file:
      - environment.env     # 이원석 수정
    volumes:
      - ${USERPROFILE}/.m2:/root/.m2  # 이원석 수정
    build:
      context: .
      dockerfile: Dockerfile
      args:
        MAVEN_OPTS: "-Dmaven.wagon.http.retryHandler.count=5 -Dsun.net.client.defaultConnectTimeout=120000 -Dsun.net.client.defaultReadTimeout=120000 -Dmaven.wagon.http.pool=false"
    container_name: springboot-app
    restart: always
    depends_on:
      - db
    ports:
      - "8080:8080"
    environment:
      TZ: Asia/Seoul
      APP_ENC_KEY: "a5fuR4bshAMWQwSy4zSKJNokjc7b3DA/SqIIOT9YC9o="
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/ReConnect
      SPRING_DATASOURCE_USERNAME: reconnect
      SPRING_DATASOURCE_PASSWORD: 1234
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_SQL_INIT_MODE: never #이원석 수정

  llm:
    image: python:3.11-slim
    container_name: reconnect-llm
    working_dir: /app
    volumes:
      - "C:\\ECR\\ReConnect-LLM:/app"
    env_file:
      - "C:\\ECR\\ReConnect-LLM\\LLM.env"
    command:
      - sh
      - -lc
      - |
        set -e
        if [ -f requirements.txt ]; then
          python -m pip install --no-cache-dir -r requirements.txt
        else
          python -m pip install --no-cache-dir python-dotenv requests numpy pandas tenacity openpyxl tqdm pydantic openai
        fi
        
        mkdir -p out

        if python run_llm_pipeline.py --answers data/answers_demo.json --upload-ecr; then
          touch out/last_run.done
          rm -f out/last_run.fail 2>/dev/null || true
        else
          echo 'LLM FAILED' >&2
          rm -f out/last_run.done 2>/dev/null || true
          touch out/last_run.fail
        fi

        tail -f /dev/null
    healthcheck:
      test: ["CMD-SHELL", "test -f out/last_run.done -a ! -f out/last_run.fail"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    environment:
      - LANG=C.UTF-8
      - LC_ALL=C.UTF-8
      - PYTHONIOENCODING=UTF-8
      - PYTHONUTF8=1
      - RECONNECT_BASE=http://app:8080

volumes:
  pgdata: